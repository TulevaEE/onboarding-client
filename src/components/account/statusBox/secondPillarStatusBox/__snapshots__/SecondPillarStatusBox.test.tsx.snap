// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecondPillarStatusBox renders high fee flow when fund selection incomplete 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={102.00000000000001}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="select.sources.select.all.deadline"
          values={
            Object {
              "b": [Function],
              "periodEnding": "August 1",
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/2nd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.choose.low.fees"
    />
  </Link>
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders high fee message when in high fee fund and no partial conversion 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={200}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="select.sources.select.all.deadline"
          values={
            Object {
              "b": [Function],
              "periodEnding": "August 1",
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/2nd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.choose.low.fees"
    />
  </Link>
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders low fee when fund selection incomplete 1`] = `
<StatusBoxRow
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.lowFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-light"
    to="/2nd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.join.tuleva.2"
    />
  </Link>
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders no 2nd pillar flow when no second pillar 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.second.missing.label"
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
/>
`;

exports[`SecondPillarStatusBox renders the PIK flow when fund PIK number present 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.second.pik"
        values={
          Object {
            "secondPillarPikNumber": "EE1234567",
          }
        }
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
/>
`;

exports[`SecondPillarStatusBox renders the success flow 1`] = `
<StatusBoxRow
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.index.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.lowFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  ok={true}
  showAction={true}
/>
`;

exports[`SecondPillarStatusBox renders the transfer flow when fund transfers incomplete 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={200}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="select.sources.select.all.deadline"
          values={
            Object {
              "b": [Function],
              "periodEnding": "August 1",
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/2nd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.choose.low.fees"
    />
  </Link>
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders the withdrawal flow when withdrawal is in progress 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.second.withdraw"
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/applications/undefined/cancellation"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.second.withdraw.cancel"
    />
  </Link>
</StatusBoxRow>
`;
