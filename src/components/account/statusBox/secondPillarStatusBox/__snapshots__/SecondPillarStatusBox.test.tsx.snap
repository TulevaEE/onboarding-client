// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecondPillarStatusBox renders high fee flow when fund selection incomplete 1`] = `
<StatusBoxRow
  error={true}
  extraBottom={
    <div
      className="card card-primary border-0 mt-3 ml-3 ml-md-5 mr-3 my-2 px-4 py-3"
    >
      <div
        className="row"
      >
        <TinyCard
          img="euro.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.text"
              values={
                Object {
                  "b": [Function],
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.title"
            />
          }
        />
        <TinyCard
          img="basket.svg"
          text={
            <React.Fragment>
              <Memo(MemoizedFormattedMessage)
                id="account.status.choice.pillar.second.basketcard.text"
                values={
                  Object {
                    "b": [Function],
                  }
                }
              />
              <InfoTooltip
                name="diversification-tooltip"
              >
                <Memo(MemoizedFormattedMessage)
                  id="account.status.choice.pillar.second.basketcard.tooltip"
                />
              </InfoTooltip>
            </React.Fragment>
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.basketcard.title"
            />
          }
        />
        <TinyCard
          img="deadline.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.text"
              values={
                Object {
                  "b": [Function],
                  "periodEnding": "July 31 at 00:59",
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.title"
            />
          }
        />
      </div>
    </div>
  }
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={102.00000000000001}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <SecondPillarActionButton
    className="btn-primary"
  />
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders high fee message when in high fee fund and no partial conversion 1`] = `
<StatusBoxRow
  error={true}
  extraBottom={
    <div
      className="card card-primary border-0 mt-3 ml-3 ml-md-5 mr-3 my-2 px-4 py-3"
    >
      <div
        className="row"
      >
        <TinyCard
          img="euro.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.text"
              values={
                Object {
                  "b": [Function],
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.title"
            />
          }
        />
        <TinyCard
          img="basket.svg"
          text={
            <React.Fragment>
              <Memo(MemoizedFormattedMessage)
                id="account.status.choice.pillar.second.basketcard.text"
                values={
                  Object {
                    "b": [Function],
                  }
                }
              />
              <InfoTooltip
                name="diversification-tooltip"
              >
                <Memo(MemoizedFormattedMessage)
                  id="account.status.choice.pillar.second.basketcard.tooltip"
                />
              </InfoTooltip>
            </React.Fragment>
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.basketcard.title"
            />
          }
        />
        <TinyCard
          img="deadline.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.text"
              values={
                Object {
                  "b": [Function],
                  "periodEnding": "July 31 at 00:59",
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.title"
            />
          }
        />
      </div>
    </div>
  }
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={200}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <SecondPillarActionButton
    className="btn-primary"
  />
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders low fee when fund selection incomplete 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.2.label"
        values={
          Object {
            "paymentRate": 2,
          }
        }
      />,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.index.2.description"
          values={
            Object {
              "paymentRate": 6,
              "paymentRateFulfillmentDate": "...",
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  ok={true}
  showAction={true}
>
  <SecondPillarActionButton
    className="btn-outline-primary"
  />
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders no 2nd pillar flow when no second pillar 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.second.missing.label"
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
/>
`;

exports[`SecondPillarStatusBox renders the payment rate flow 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.index.2.label"
        values={
          Object {
            "paymentRate": 2,
          }
        }
      />,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.pillar.second.paymentRate.comment"
          values={
            Object {
              "b": [Function],
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/2nd-pillar-payment-rate"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.paymentRate.increase"
    />
  </Link>
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders the success flow 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.index.2.label"
        values={
          Object {
            "paymentRate": 2,
          }
        }
      />,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.index.2.description"
          values={
            Object {
              "paymentRate": 6,
              "paymentRateFulfillmentDate": "...",
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  ok={true}
  showAction={true}
/>
`;

exports[`SecondPillarStatusBox renders the transfer flow when fund transfers incomplete 1`] = `
<StatusBoxRow
  error={true}
  extraBottom={
    <div
      className="card card-primary border-0 mt-3 ml-3 ml-md-5 mr-3 my-2 px-4 py-3"
    >
      <div
        className="row"
      >
        <TinyCard
          img="euro.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.text"
              values={
                Object {
                  "b": [Function],
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.feecard.title"
            />
          }
        />
        <TinyCard
          img="basket.svg"
          text={
            <React.Fragment>
              <Memo(MemoizedFormattedMessage)
                id="account.status.choice.pillar.second.basketcard.text"
                values={
                  Object {
                    "b": [Function],
                  }
                }
              />
              <InfoTooltip
                name="diversification-tooltip"
              >
                <Memo(MemoizedFormattedMessage)
                  id="account.status.choice.pillar.second.basketcard.tooltip"
                />
              </InfoTooltip>
            </React.Fragment>
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.basketcard.title"
            />
          }
        />
        <TinyCard
          img="deadline.svg"
          text={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.text"
              values={
                Object {
                  "b": [Function],
                  "periodEnding": "July 31 at 00:59",
                }
              }
            />
          }
          title={
            <Memo(MemoizedFormattedMessage)
              id="account.status.choice.pillar.second.deadlinecard.title"
            />
          }
        />
      </div>
    </div>
  }
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="second-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <small
        className="text-muted"
      >
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.comment"
          values={
            Object {
              "currentFeesEuro": <Euro
                amount={200}
                className="text-danger"
                fractionDigits={0}
              />,
              "tulevaFeesEuro": <Euro
                amount={98}
                className="text-success"
                fractionDigits={0}
              />,
            }
          }
        />
      </small>,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <SecondPillarActionButton
    className="btn-primary"
  />
</StatusBoxRow>
`;

exports[`SecondPillarStatusBox renders the withdrawal flow when withdrawal is in progress 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.second.withdraw"
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.second"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/applications/undefined/cancellation"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.second.withdraw.cancel"
    />
  </Link>
</StatusBoxRow>
`;
