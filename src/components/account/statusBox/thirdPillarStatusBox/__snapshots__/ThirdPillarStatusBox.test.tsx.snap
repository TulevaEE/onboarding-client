// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThirdPillarStatusBox renders the "open third pillar" flow when user has no third pillar active 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.third.missing.label"
      />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.missing.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "payment incomplete" flow when funds have not transferred yet and date between feb-nov 1`] = `
<StatusBoxRow
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.pillar.third.thisYearPaymentIncomplete.label"
        />
        <InfoTooltip
          name="third-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.pillar.third.paymentInfo"
          />
        </InfoTooltip>
      </React.Fragment>,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
  warning={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "payment incomplete" flow when no funds have ever been transferred 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.pillar.third.paymentIncomplete.label"
        />
        <InfoTooltip
          name="third-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.pillar.third.paymentInfo"
          />
        </InfoTooltip>
      </React.Fragment>,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "pick tuleva" flow when partially converted with selection 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.third.transferIncomplete.label"
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
  warning={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "pick tuleva" flow when partially converted with transfer 1`] = `
<StatusBoxRow
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.label"
        />
        <InfoTooltip
          name="third-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.lowFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-light"
    to="/3rd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.inactive.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "pick tuleva" flow when partially converted with transfer 2`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.index.label"
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "pick tuleva" flow when user has some other fund manager 1`] = `
<StatusBoxRow
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.lowFee.label"
        />
        <InfoTooltip
          name="third-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.lowFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-light"
    to="/3rd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.inactive.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "pick tuleva" flow with error when in high cost fund 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <React.Fragment>
        <Memo(MemoizedFormattedMessage)
          id="account.status.choice.highFee.label"
        />
        <InfoTooltip
          name="third-pillar-tooltip"
        >
          <Memo(MemoizedFormattedMessage)
            id="account.status.choice.highFee.description"
          />
        </InfoTooltip>
      </React.Fragment>,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-flow"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.choose.low.fees"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the "transfer incomplete" flow when user has several funds 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.third.transferIncomplete.label"
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
  warning={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the december flow when date in december 1`] = `
<StatusBoxRow
  error={true}
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.pillar.third.paymentDeadline"
        values={
          Object {
            "b": [Function],
          }
        }
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the success flow 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.index.label"
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;

exports[`ThirdPillarStatusBox renders the success flow when funds have not transferred yet but its only january 1`] = `
<StatusBoxRow
  lines={
    Array [
      <Memo(MemoizedFormattedMessage)
        id="account.status.choice.lowFee.index.label"
      />,
      <Memo(Connect(ThirdPillarContributionAmount)) />,
    ]
  }
  name={
    <Memo(MemoizedFormattedMessage)
      id="account.status.choice.pillar.third"
    />
  }
  ok={true}
  showAction={true}
>
  <Link
    className="btn btn-outline-primary"
    to="/3rd-pillar-payment"
  >
    <MemoizedFormattedMessage
      id="account.status.choice.pillar.third.success.action"
    />
  </Link>
</StatusBoxRow>
`;
